{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","preventDefault","type","onChange","pattern","title","required","Filter","ContactList","contacts","deleteContact","map","contact","onClick","id","addContact","createAction","payload","nanoid","changeFilter","getContacts","getFilter","state","filter","getContactsFiltered","items","normalizedFilter","toLowerCase","includes","App","useSelector","dispatch","useDispatch","contactsActions","createReducer","actions","some","c","alert","combineReducers","todosPersistConfig","key","storage","blacklist","persReducer","persistReducer","contactsReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,UAAY,+B,iLCKfC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,cC8DxBI,MA7Df,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KASMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAIN,OACE,uBAAMT,SAtBa,SAAAO,GACnBA,EAAEG,iBACFV,EAASE,EAAME,GACfD,EAAQ,IACRE,EAAU,KAkBV,UACE,yCAEE,uBACEM,KAAK,OACLT,KAAK,OACLO,MAAOP,EACPU,SAAUN,EACVO,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZ,2CAEE,uBACEJ,KAAK,MACLT,KAAK,SACLO,MAAOL,EACPQ,SAAUN,EACVO,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,OAIZ,wBAAQJ,KAAK,SAAb,6BCxCSK,EAdA,SAAC,GAAyB,IAAvBP,EAAsB,EAAtBA,MAAOG,EAAe,EAAfA,SACvB,OACE,0DAEE,uBAAOD,KAAK,OAAOF,MAAOA,EAAOG,SAAUA,EAAUV,KAAK,aC0BjDe,G,MA5BK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC/B,OACE,6BACGD,GACCA,EAASE,KAAI,SAAAC,GAAO,OAClB,+BACE,8BACGA,EAAQnB,KADX,KACmBmB,EAAQjB,UAE3B,wBAAQO,KAAK,SAASW,QAAS,kBAAMH,EAAcE,EAAQE,KAA3D,sBAJOF,EAAQE,W,eCQZ,GAAEC,WAdEC,YAAa,eAAe,SAACvB,EAAME,GAAP,MAAmB,CAChEsB,QAAS,CACPH,GAAII,YAAO,GACXzB,OACAE,cAUyBe,cANPM,YAAa,kBAMSG,aAJvBH,YAAa,wBAIwBI,YAFtCJ,YAAa,gBCdpBK,EAAY,SAAAC,GAAK,OAAIA,EAAMb,SAASc,QAEpCC,EAAsB,SAAAF,GACjC,IAAMb,EAJmB,SAAAa,GAAK,OAAIA,EAAMb,SAASgB,MAIhCL,CAAYE,GAEvBI,EADSL,EAAUC,GACOK,cAEhC,OAAOlB,EAASc,QAAO,SAAAX,GAAO,OAC5BA,EAAQnB,KAAKkC,cAAcC,SAASF,OC0BzBG,I,EAAAA,EAxBf,WACE,IAAMpB,EAAWqB,YAAYN,GACvBD,EAASO,YAAYT,GACrBU,EAAWC,cAUjB,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAazC,SAXE,SAACE,EAAME,GAAP,OACjBoC,EAASE,EAAgBlB,WAAWtB,EAAME,OAWxC,0CACA,cAAC,EAAD,CAAQK,MAAOuB,EAAQpB,SAVN,SAAAL,GAAC,OACpBiC,EAASE,EAAgBd,aAAarB,EAAEC,cAAcC,WAUpD,cAAC,EAAD,CAAaS,SAAUA,EAAUC,cARf,SAAAI,GAAE,OAAIiB,EAASE,EAAgBvB,cAAcI,W,sDClB/DW,EAAQS,YAAc,IAAD,mBACxBC,EAAQpB,YAAa,SAACO,EAAD,GAAyB,IAAfL,EAAc,EAAdA,QAE9B,OADkBK,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAE5C,OAASwB,EAAQxB,QAE5C6C,MAAM,GAAD,OAAIrB,EAAQxB,KAAZ,6BAER,GAAN,mBAAW6B,GAAX,CAAkBL,OANK,cAQxBkB,EAAQzB,eAAgB,SAACY,EAAD,OAAUL,EAAV,EAAUA,QAAV,OACvBK,EAAMC,QAAO,qBAAGT,KAAgBG,QATT,IAYrBM,EAASW,YAAc,GAAD,eACzBC,EAAQhB,cAAe,SAACG,EAAD,YAAUL,YAGrBsB,cAAgB,CAC7Bd,QACAF,WCRIiB,EAAqB,CACzBC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAAcC,YAAeL,EAAoBM,GAE1CC,EAAQC,YAAe,CAClCC,QAAS,CACPxC,SAAUmC,GAEZM,UAAUC,EACVC,WAAY,SAAAC,GAAoB,OAC9BA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,WAKrDC,EAAYC,YAAahB,GC3BtCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAaC,QAAS,aAAcL,UAAWA,EAA/C,SACE,cAAC,IAAD,CAAUf,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINqB,SAASC,eAAe,W","file":"static/js/main.776e9ae2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1CZtx\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} name=\"find\" />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactList.module.css';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul>\n      {contacts &&\n        contacts.map(contact => (\n          <li key={contact.id}>\n            <p>\n              {contact.name}: {contact.number}\n            </p>\n            <button type=\"button\" onClick={() => deleteContact(contact.id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import { nanoid } from 'nanoid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contact/add', (name, number) => ({\n  payload: {\n    id: nanoid(3),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contact/delete');\n\nconst changeFilter = createAction('contact/changeFilter');\n\nconst getContacts = createAction('contact/get');\n\nexport default { addContact, deleteContact, changeFilter, getContacts };\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getContactsFiltered = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport contactsActions from '../src/redux/contacts/contacts-actions';\nimport {\n  getContactsFiltered,\n  getFilter,\n} from '../src/redux/contacts/contacts-selectors';\n\nfunction App() {\n  const contacts = useSelector(getContactsFiltered);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const addContact = (name, number) =>\n    dispatch(contactsActions.addContact(name, number));\n\n  const changeFilter = e =>\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\n\n  const deleteContact = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={contacts} deleteContact={deleteContact} />\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    const dublicate = state.some(c => c.name === payload.name);\n    if (dublicate) {\n      return alert(`${payload.name} is already in contacts.`);\n    }\n    return [...state, payload];\n  },\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst todosPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst persReducer = persistReducer(todosPersistConfig, contactsReducer);\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={'Loading...'} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}